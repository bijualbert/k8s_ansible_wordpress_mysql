---
# tasks file for kube_master

- name: "Installing Required Packages"
  package:
      name:
      - "docker"
      - "iproute-tc"
      state: present

- name: "Creating Yum Repo For Kubeadm, Kubelet, and Kubectl"
  yum_repository:
      name: kubernetes
      description: "Kubernetes"
      baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
      gpgcheck: yes
      gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      exclude: kubelet kubeadm kubectl

- name: "Installing Kubeadm, Kubelet, and Kubectl"
  yum:
      name: [ 'kubectl', 'kubeadm', 'kubelet' ]
      state: present
      disable_excludes: kubernetes

- name: Ensure br_netfilter is enabled.
  modprobe:
    name: br_netfilter
    state: present

- name: update kernel settings
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: 1
    sysctl_set: yes
    state: present
    reload: yes

- name: "Copy Daemon file to change the Docker's cgroup Driver"
  copy:
      src: daemon.json
      dest: "/etc/docker/daemon.json"

- name: "Starting Docker Service"
  service:
      name: "docker"
      state: started
      enabled: yes

- name: "Starting Kubelet Service"
  service:
      name: "kubelet"
      state: started
      enabled: yes

- name: "Initializing the Kubernetes cluser on Master Node"
  command: "kubeadm init --pod-network-cidr={{ pod_cidr_network }} --ignore-preflight-errors=NumCPU --ignore-preflight-errors=Mem"
  ignore_errors: True

- name: "Configuration Files Setup"
  file:
    path: "$HOME/.kube"
    state: directory
    
- name: "Copying Configuration File"
  copy:
    src: /etc/kubernetes/admin.conf
    dest: $HOME/.kube/config
    remote_src: yes

- name: Change kubeconfig file permission
  file:
    path: $HOME/.kube/config
    owner: "{{ ansible_effective_user_id }}"
    group: "{{ ansible_effective_group_id }}"

- name: "Downloading CNI Plugin"
  command: "kubectl apply  -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml"
  ignore_errors: True

- name: "THE JOIN TOKEN"
  command: "kubeadm token create --print-join-command"
  register: x
  ignore_errors: True

- name: "Storing Token"
  local_action: copy content={{ x.stdout }} dest=/tmp/token
